
# %% Create a group level brain mask for SPM
'''
Loops through every participant's brain mask generated by fmriprep and creates
a group level mask that includes all voxels that had at least 2 participants brain
mask
'''
from nilearn import plotting
import nibabel as nib
import numpy as np
from nilearn.image import new_img_like

# global vars
subj_list = list(np.loadtxt('../subject_list.txt', dtype='str'))
pp_dir = ('/home/lukeh/hpcworking/lukeH/projects/OCDbaseline/data/'
          + 'derivatives/fmriprep-fix/')
space = 'MNI152NLin2009cAsym'
subj = subj_list[0]
template = (pp_dir+subj+'/func/'+subj+'_task-fearRev_' +
            'space-'+space+'_desc-brain_mask.nii.gz')

# get info about image
img_dims = nib.load(template).shape
msk_array = np.zeros((img_dims[0], img_dims[1], img_dims[2], len(subj_list)))

# for each subject
for s, subj in enumerate(subj_list):
    img_file = (pp_dir+subj+'/func/'+subj+'_task-fearRev_' +
                'space-'+space+'_desc-brain_mask.nii.gz')
    data = nib.load(img_file).get_fdata()
    msk_array[:, :, :, s] = data  # fill the 4d array

msk_array = np.sum(msk_array, axis=3)  # sum across subjects
msk_array = (msk_array > 1) * 1  # at least two subjects
msk_img = new_img_like(template, msk_array, copy_header=True)
nib.save(msk_img, 'spm_mask.nii')
plotting.plot_img(msk_img)